//
//  HomeViewModel.swift
//  Tourding_FE
//
//  Created by Ïù¥Ïú†ÌòÑ on 7/24/25.
//

import Foundation

final class HomeViewModel: ObservableObject {
    //MARK: - ÏÑúÎ≤Ñ Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû•
    @Published var userId: Int = 2
    @Published var routeLocation: [LocationNameModel] = []
    
    // MARK: - Home ÌôîÎ©¥ Ï†ÑÏö© ÏÉÅÌÉúÎì§
    @Published var abendFlag: Bool = true
    
    // ÏµúÍ∑º Í≤ΩÎ°ú Í¥ÄÎ†® Îç∞Ïù¥ÌÑ∞ (routeContinue ÏÑπÏÖòÏö©)
    @Published var recentRoute: RecentRouteData?
    
    private let routeRepository: RouteRepositoryProtocol
    
    init(routeRepository: RouteRepositoryProtocol) {
        self.routeRepository = routeRepository
        loadRecentRoute()
    }
    
    // MARK: - Home ÌôîÎ©¥ Ï†ÑÏö© ÎπÑÏ¶àÎãàÏä§ Î°úÏßÅ
    
    /// ÏµúÍ∑º Í≤ΩÎ°ú Îç∞Ïù¥ÌÑ∞ Î°úÎìú
    private func loadRecentRoute() {
        // TODO: Ïã§Ï†úÎ°úÎäî UserDefaultsÎÇò ÏÑúÎ≤ÑÏóêÏÑú ÏµúÍ∑º Í≤ΩÎ°ú Í∞ÄÏ†∏Ïò§Í∏∞
        recentRoute = RecentRouteData(
            startLocationName: "ÌïúÎèôÎåÄ",
            endLocationName: "ÏòÅÎÇ®ÎåÄ"
        )
    }
    
    /// ÏµúÍ∑º Í≤ΩÎ°ú Ïù¥Ïñ¥ÏÑú Í∞ÄÍ∏∞ Í∏∞Îä•
    func continueRecentRoute() {
        guard let recent = recentRoute else { return }
        print("üîÑ ÏµúÍ∑º Í≤ΩÎ°ú Ïù¥Ïñ¥ÏÑú Í∞ÄÍ∏∞: \(recent.startLocationName) ‚Üí \(recent.endLocationName)")
        // ÎùºÏö∞ÌåÖ Î°úÏßÅ Ï≤òÎ¶¨
    }
    
    //MARK: - API Ìò∏Ï∂ú
//    func postRouteAPI() async -> [TestModel] {
//        let requestBody: RequestRouteModel = RequestRouteModel(userId: userId, start: <#T##String#>, goal: <#T##String#>, locateName: <#T##String#>)
//        
//        do {
//            let response: () = try await routeRepository.postRoutes(requestBody: requestBody)
//
//            print("POST SUCCESS: /routes \(response)")
//        } catch {
//            print("POST ERROR: /routes \(error)")
//        }
//    }
    
    @MainActor
    func getRouteLocationAPI() async {
        do {
            let response = try await routeRepository.getRoutesLocationName(userId: userId)
            routeLocation = response
//            print("response : \(routeLocation)")
        } catch {
            print("GET ERROR: /routes/location-name \(error)")
        }
    }
    
}

// MARK: - Home ÌôîÎ©¥ Ï†ÑÏö© Îç∞Ïù¥ÌÑ∞ Î™®Îç∏
struct RecentRouteData {
    let startLocationName: String
    let endLocationName: String
}
